{"version":3,"sources":["webpack:///webpack/bootstrap b8887a55073cda71a957","webpack:///./src/langSearch.js","webpack:///./src/api.js","webpack:///./src/searchTest.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,KAAK;AAClE;AACA;AACA,mDAAmD,KAAK,yBAAyB,WAAW;AAC5F;AACA;AACA,2CAA2C,KAAK;AAChD;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;ACzEA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,YAAY;AACZ;;AAEA;AACA;AACA;AACA,iBAAiB,yBAAyB,GAAG,0BAA0B;AACvE,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,KAAK;AAC9D,iBAAiB,KAAK,EAAE,QAAQ,EAAE,IAAI,GAAG,gBAAgB,EAAE,QAAQ;AACnE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB,YAAY,wBAAwB;AACpF,iBAAiB,WAAW,EAAE,WAAW;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,QAAQ;AACtD;AACA,qBAAqB,QAAQ,IAAI,eAAe,IAAI,mBAAmB;AACvE;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,2CAA2C,QAAQ;AACnD,4CAA4C,QAAQ;AACpD;AACA,GAAG;AACH;;AAEQ;;;;;;;;;;;AC1ER;AACmB;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,IAAI;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6GAA4D,IAAI,2BAA2B,IAAI;AAC/F;;AAEA;AACA;AACA;;AAEA;AACA,6GAA4D,IAAI,2BAA2B,IAAI;AAC/F;;AAEA,uCAAuC,WAAW,wBAAwB,YAAY;AACtF,CAAC;;AAED;AACA;AACA;AACA","file":"testBundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b8887a55073cda71a957","// FEATURE: IS PREFERRED LANGUAGE & DIALECT AVAILABLE ?\n// FIXME: Still ignores fuzzy matches, check if the indexes are correct\n\nfunction binarySearch (arr, val) {\n  let exactMatch = exact(arr, val)\n  let fuzzyMatch = fuzzy(arr, val)\n\n  // return search results\n  if (exactMatch) return [2]\n  else if (fuzzyMatch[0]) return [1, fuzzyMatch[1]]\n  else return [0]\n}\n\n// does nothing if lang is in supported api langs array and the app continues\nfunction exact (arr, val) {\n  let lowIndex = 0\n  let highIndex = arr.length - 1\n  let midIndex = Math.floor((lowIndex + highIndex) / 2)\n  let match = arr[midIndex] === val\n\n  while (!match && lowIndex <= highIndex) {\n    // change the center\n    if (val < arr[midIndex]) {\n      highIndex = midIndex - 1\n    } else if (val > arr[midIndex]) {\n      lowIndex = midIndex + 1\n    }\n    // these variables don't update unless reassigned\n    midIndex = Math.floor((lowIndex + highIndex) / 2)\n    match = arr[midIndex] === val\n  }\n  return match\n}\n\n// fuzzy search function that accepts the first match\nfunction fuzzy (arr, val) {\n  let lowIndex = 0\n  let highIndex = arr.length - 1\n  let midIndex = Math.floor((lowIndex + highIndex) / 2)\n  let match = val.indexOf(arr[midIndex]) === 0\n\n  while (!match && lowIndex <= highIndex) {\n    // change the center to reflect the decided halve of the arr\n    if (val < arr[midIndex]) {\n      highIndex = midIndex - 1\n    } else if (val > arr[midIndex]) {\n      lowIndex = midIndex + 1\n    }\n    // these variables don't update unless reassigned\n    midIndex = Math.floor((lowIndex + highIndex) / 2)\n    match = val.indexOf(arr[midIndex]) === 0\n  }\n  return [match, arr[midIndex]]\n}\n\n// to provide a better UX, send best matched language string to the calling f()\nexport default function setLanguage (arr, lang) {\n  const results = binarySearch(arr, lang)\n  try {\n    switch (results[0]) {\n      case 2:\n        console.log(`Preferred language is available. Add '${lang}' to api call.`)\n        return lang\n      case 1:\n        console.log(`Preferred language dialect (${lang}) is unavailable. Add '${results[1]}' to api call.`)\n        return results[1]\n      default:\n        console.log(`Preferred language (${lang}) is unavailable. Add 'en' to api call.`)\n        return 'en'\n    }\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/langSearch.js\n// module id = 0\n// module chunks = 0","/* eslint-env browser */\nimport setLanguage from './langSearch.js'\n\nconst apiLangs = [\n  'ar', 'az', 'be', 'bg', 'bs', 'ca', 'cs', 'de', 'el', 'en', 'es', 'et', 'fr',\n  'hr', 'hu', 'id', 'is', 'it', 'kw', 'nb', 'nl', 'pl', 'pt', 'ru', 'sk', 'sl',\n  'sr', 'sv', 'tet', 'tr', 'uk', 'x-pig-latin', 'zh', 'zh-tw'\n]\n\nconst dummyData = {\n  'latitude': 41.400004027224064,\n  'longitude': -73.08102241601675,\n  'timezone': 'America/New_York',\n  'offset': -4,\n  'currently': {\n    'time': 1496461442,\n    'summary': 'Clear',\n    'icon': 'clear-night',\n    'temperature': 52.26\n  },\n  'flags': { 'units': 'us' }\n}\n\n// FUNCTIONAL CHECK ðŸ†—\nfunction urlParts (position) {\n  const lang = window.navigator.language.toLowerCase()\n  const loc = `${position.coords.latitude},${position.coords.longitude}`\n  return { lang, loc }\n}\n\n// FUNCTIONAL CHECK ðŸ†—\nfunction darkSkyUrlBuilder (position) {\n  const browserBits = urlParts(position)\n  const lang = setLanguage(apiLangs, browserBits.lang)\n  const key = '767b3baa2aca876fa6ea5e4fbd75228c'\n  const cors = 'https://cors-anywhere.herokuapp.com/'\n  const darkSky = 'https://api.darksky.net/forecast/'\n  const queries = `?exclude=minutely,hourly,daily&lang=${lang}&units=auto`\n  const url = `${cors}${darkSky}${key}/${browserBits.loc}${queries}`\n  return url\n}\n\n// FUNCTIONAL CHECK ðŸ†—\nfunction googleMapsUrlBuilder (position) {\n  const browserBits = urlParts(position)\n  // const key = ''\n  const googleMaps = 'https://maps.googleapis.com/maps/api/geocode/json'\n  const parameters = `?latlng=${browserBits.loc}&language=${browserBits.browserLang}`\n  const url = `${googleMaps}${parameters}`\n  return url\n}\n\n// FUNCTIONAL CHECK ðŸ†—\n// CALL API TO GET DATA\nfunction callApi (url, service) {\n  return new Promise(function promiseResponse (resolve, reject) {\n    const request = new XMLHttpRequest()\n    // REQUEST CALLBACKS\n    request.open('GET', url)\n    request.onloadstart = _ => console.log(`${service}: LOAD START`)\n    request.onload = function requestOnload () {\n      console.log(`${service}: ${request.status}, ${request.statusText}`)\n      if (request.status >= 200 && request.status < 400) {\n        resolve(request.response)\n      } else {\n        reject(Error(request.statusText))\n      }\n    }\n    request.onerror = _ => reject(Error(`${service}: Network error on getting data.`))\n    request.onloadend = _ => console.log(`${service}: LOAD END`)\n    request.send()\n  })\n}\n\nexport { apiLangs, dummyData, darkSkyUrlBuilder, googleMapsUrlBuilder, callApi }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/api.js\n// module id = 1\n// module chunks = 0","import setLanguage from './langSearch.js'\nimport { apiLangs } from './api.js'\n/* eslint-env browser */\nwindow.addEventListener('load', function loaded () {\n  console.log('DOCUMENT IS READY')\n  const wLang = ['en-us', 'zh-sp', 'es-es']\n  let exactMatch = []\n  let fuzzyOrFail = []\n\n  // scans an array for matches\n  function testArray (arr, val) {\n    console.log(`-----------------------------------------\n        \\ntestSearch: ${val}`)\n    return setLanguage(arr, val)\n  }\n\n  // tests a single value\n  function testSingle (val) {\n    console.log('SINGLE TEST')\n    return setLanguage(apiLangs, val)\n  }\n\n  // RUN TESTS\n  // singles\n  testSingle('ja')\n\n  // test all of weird list\n  exactMatch.push('\\nWLANGS::')\n  fuzzyOrFail.push('\\nWLANGS::')\n\n  for (let val of wLang) {\n    testArray(apiLangs, val) === val ? exactMatch.push(`\\n${val}`) : fuzzyOrFail.push(`\\n${val}`)\n  }\n\n  // test the api languages\n  exactMatch.push('\\nAPILANGS::')\n  fuzzyOrFail.push('\\nAPILANGS::')\n\n  for (let val of apiLangs) {\n    testArray(apiLangs, val) === val ? exactMatch.push(`\\n${val}`) : fuzzyOrFail.push(`\\n${val}`)\n  }\n\n  return console.log(`\\nExact Match: ${exactMatch}\\n\\nFuzzy or Failing: ${fuzzyOrFail}`)\n})\n\n// promiseWeather = Promise.all()\n//     .then(writeToDoc(storedData))\n//     .catch(error => console.log(error))\n// if no Nav rej Promise.all and use dummy data\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/searchTest.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}