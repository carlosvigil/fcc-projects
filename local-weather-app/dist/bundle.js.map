{"version":3,"sources":["webpack:///webpack/bootstrap d334b706dc23bb55c168","webpack:///./src/api.js","webpack:///./src/browser.js","webpack:///./src/app.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;AChEA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,YAAY;AACZ;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,KAAK;AAC9D,iBAAiB,KAAK,EAAE,QAAQ,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,EAAE,QAAQ;AAC9D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe,IAAI,mBAAmB;AAC3D;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;ACrEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,KAAK,8BAA8B,cAAc;AAClF;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,gDAAgD,cAAc;AAC9D;;AAEA;AACA;AACA,MAAM;AACN;AACA,8EAA8E,KAAK;AACnF,MAAM;AACN;AACA;AACA;AACA,gDAAgD,KAAK;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB,IAAI,kBAAkB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB,MAAM,EAAE,UAAU;AACpE;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;ACxFA;AAAA;AACgD;AACX;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d334b706dc23bb55c168","/* eslint-env browser */\n\n// const apiLangs = [\n//   'ar', 'az', 'be', 'bg', 'bs', 'ca', 'cs', 'de', 'el',\n//   'en', 'es', 'et', 'fr', 'hr', 'hu', 'id', 'it', 'is', 'kw', 'nb', 'nl',\n//   'pl', 'pt', 'ru', 'sk', 'sl', 'sr', 'sv', 'tet', 'tr', 'uk', 'x-pig-latin',\n//   'zh', 'zh-tw'\n// ]\nexport const dummyData = {\n  'latitude': 41.400004027224064,\n  'longitude': -73.08102241601675,\n  'timezone': 'America/New_York',\n  'offset': -4,\n  'currently': {\n    'time': 1496461442,\n    'summary': 'Clear',\n    'icon': 'clear-night',\n    'nearestStormDistance': 9,\n    'nearestStormBearing': 129,\n    'precipIntensity': 0,\n    'precipProbability': 0,\n    'temperature': 52.26,\n    'apparentTemperature': 52.26,\n    'dewPoint': 39.38,\n    'humidity': 0.61,\n    'windSpeed': 4.91,\n    'windBearing': 315,\n    'visibility': 10,\n    'cloudCover': 0,\n    'pressure': 1015.07,\n    'ozone': 384.47\n  },\n  'flags': { 'units': 'us' }\n}\n\n// NOTE: FUNCTIONAL CHECK ðŸ†—\n// BUILD REQUEST URL\nexport function urlBuilder (position) {\n  const lang = 'en'\n  const key = '767b3baa2aca876fa6ea5e4fbd75228c'\n  const lat = position.coords.latitude\n  const lon = position.coords.longitude\n  const cors = 'https://cors-anywhere.herokuapp.com/'\n  const darkSky = 'https://api.darksky.net/forecast/'\n  const queries = `?exclude=minutely,hourly,daily&lang=${lang}&units=auto`\n  const url = `${cors}${darkSky}${key}/${lat},${lon}${queries}`\n  return url\n}\n\n// NOTE: FUNCTIONAL CHECK ðŸ†—\n// CALL API TO GET DATA\nexport function getWeatherData (url) {\n  return new Promise(function promiseResponse (resolve, reject) {\n    const request = new XMLHttpRequest()\n    // REQUEST CALLBACKS\n    request.open('GET', url)\n    request.onloadstart = _ => console.log('LOAD START')\n    request.onload = function requestOnload () {\n      console.log(`${request.status}: ${request.statusText}`)\n      if (request.status >= 200 && request.status < 400) {\n        resolve(request.response)\n      } else {\n        reject(Error(request.status, request.statusText))\n      }\n    }\n    request.onerror = _ => reject(Error('Network error on getting data.'))\n    request.onloadend = _ => console.log('LOAD END')\n    request.send()\n  })\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/api.js\n// module id = 0\n// module chunks = 0","/* eslint-env browser */\n// MAYBE: add session storage comparison\n//   if new position differs from stored position\n// FEATURE: add timezone offset to written time\n// FEATURE: add dark sky maps\n//   <script type='text/javascript' src='https://maps.darksky.net/@apparent_temperature,41.350,-432.848,9.js?embed=true&timeControl=true&fieldControl=true&defaultField=temperature&defaultUnits=_f'></script>\n// REQUIREMENT: add toggle switch for temperature scale\n\n// IS PREFERRED LANGUAGE AVAILABLE ?\n// SEARCH ALGO FIXME: SPLIT INTO TWO SEARCHES, Add AWAIT\n// async function binarySearchLanguage () {\n//   let lang = window.navigator.language.toLowerCase()\n//   let startIndex = 0\n//   let stopIndex = apiLangs.length - 1\n//   let mid = Math.floor((stopIndex + startIndex) / 2)\n//   let isLang = apiLangs[mid].indexOf(lang) !== -1\n//   let containsLang = lang.indexOf(apiLangs[mid]) !== -1\n\n//   console.log('Starting binarySearch')\n//   console.log(`Nav lang is: ${lang}, apiLangs middle value is: ${apiLangs[mid]}`)\n//   while ((!isLang && !containsLang) && startIndex < stopIndex) {\n//     // re-center\n//     if (lang < apiLangs[mid]) {\n//       stopIndex = mid - 1\n//     } else if (lang > apiLangs[mid]) {\n//       startIndex = mid + 1\n//     }\n//     mid = Math.floor((stopIndex + startIndex) / 2)\n//     isLang = apiLangs.indexOf(lang) !== -1\n//     containsLang = lang.indexOf(apiLangs[mid]) !== -1\n//     console.log(`apiLangs middle value is: ${apiLangs[mid]}`)\n//   }\n\n//   if (isLang) {\n//     console.log('Language is available.')\n//   } else if (containsLang) {\n//     lang = apiLangs[mid]\n//     console.log(`Preferred localization unavailable, setting to default: ${lang}.`)\n//   } else {\n//     lang = 'en'\n//     console.log('Preferred language unavailable, setting to English.')\n//   }\n//   return console.log(`Lang sent to API is: ${lang}`)\n// }\n\n// NOTE: FUNCTIONAL CHECK ðŸ†—\n// CHECK NAVIGATOR AND RETURN POSITION\nexport function checkNavigator () {\n  const geo = window.navigator.geolocation\n  // GEOLOCATION AVAILABLE ?\n  if (geo) {\n    // yup, promise location\n    return new Promise(function promiseLocation (resolve, reject) {\n      const geoOptions = {\n        enableHighAccuracy: true,\n        timeout: 15000,\n        maximumAge: 900000\n      }\n      // get location\n      geo.getCurrentPosition(pos => resolve(pos), err => reject(err), geoOptions)\n    })\n  } else {\n    // nope\n    return window.alert('Geolocation unavailable.')\n  }\n}\n\n// WRITE TO THE DOC\nexport function writeToDoc (weather) {\n  const elm = element => document.querySelector(element)\n  // TODO: GET TOWN, USE ADDRESS OVER COORDS\n  const location = `${weather.latitude}, ${weather.longitude}`\n  const current = weather.currently\n  const time = new Date(current.time * 1e3)\n  const isoTime = time.toISOString()\n  const utcTime = time.toUTCString()\n  let tempScale = weather.flags.units === 'us' ? 'F' : 'C'\n  // TODO: ADD IF ICON DEFINED FUNCTION + DEFAULT VALUE\n  // select('.icon').setAttribute('id', iconStr)\n  elm('.location').innerHTML = location\n  elm('.summary').innerHTML = current.summary\n  elm('.temp').innerHTML = `${current.temperature}&#176;${tempScale}`\n  elm('time').setAttribute('datetime', isoTime)\n  elm('time').innerHTML = utcTime\n}\n\n// promiseWeather = Promise.all()\n//     .then(writeToDoc(storedData))\n//     .catch(error => console.log(error))\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser.js\n// module id = 1\n// module chunks = 0","/* eslint-env browser */\nimport { getWeatherData, urlBuilder, dummyData } from './api.js'\nimport { checkNavigator, writeToDoc } from './browser.js'\n\nwindow.addEventListener('load', async function loaded () {\n  console.log('DOCUMENT IS READY')\n  let weather = window.sessionStorage.saveMeCalls || false\n\n  if (!weather) {\n    try {\n      window.sessionStorage.saveMeCalls = await checkNavigator()\n          .then(pos => getWeatherData(urlBuilder(pos)))\n      weather = JSON.parse(window.sessionStorage.saveMeCalls)\n    } catch (error) {\n      console.log(error)\n      weather = dummyData\n    }\n    writeToDoc(weather)\n  } else writeToDoc(JSON.parse(weather))\n})\n\n// TODO: if no Nav rej Promise.all and use dummy data\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}